#include <stdio.h>
#include <stdlib.h>

// 노드 구조체 정의
struct Node {
    int data;           // 노드에 저장될 데이터
    struct Node* next;  // 다음 노드를 가리키는 포인터
};

// 연결 리스트의 끝에 새 노드를 추가하는 함수
void append(struct Node** head, int data) {
    struct Node* n = (struct Node*)malloc(sizeof(struct Node));
    if (n == NULL) {
        perror("메모리 할당 오류");
        exit(1); 
    }
    n->data = data;  // 데이터 설정
    n->next = NULL;  // 다음 노드 없음 (NULL)

  
    if (*head == NULL) {
        *head = n;  // 리스트가 비어있을 경우, 새 노드가 첫 번째 노드가 됨
    } else {
        struct Node* c = *head;
        while (c->next != NULL) {
            c = c->next;  // 마지막 노드로 이동
        }
        c->next = n;  // 마지막 노드의 'next'를 새 노드로 설정
    }
}

// 연결 리스트의 모든 노드를 출력하는 함수
void print(struct Node* head) {
    struct Node* c = head;
    while (c != NULL) {
        printf("%d ", c->data);
        c = c->next;
    }
    printf("\n");
}

int main() {
    struct Node* myList = NULL;  // 빈 연결 리스트 생성

    // 연결 리스트에 데이터 추가
    append(&myList, 1);
    append(&myList, 2);
    append(&myList, 3);

    // 연결 리스트 출력
    printf("연결 리스트: ");
    print(myList);

    // 연결 리스트 메모리 해제
    struct Node* c = myList;
    while (c != NULL) {
        struct Node* t = c;
        c = c->next;
        free(t);  // 현재 노드 메모리 해제
    }

    return 0;
}

3개의 정수 리스트를 만들고, 화면에 출력하는 코드
